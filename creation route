package com.autoecole.routes

import io.ktor.application.*
import io.ktor.response.*
import io.ktor.request.*
import io.ktor.routing.*
import org.jetbrains.exposed.sql.*
import org.jetbrains.exposed.sql.transactions.transaction
import com.autoecole.models.*
import kotlinx.datetime.toLocalDate

fun Route.studentRoutes() {
    route("/students") {
        // Obtenir tous les élèves
        get {
            val students = transaction {
                Students.selectAll().map { rowToStudent(it) }
            }
            call.respond(students)
        }

        // Ajouter un élève
        post {
            val student = call.receive<Student>()
            transaction {
                Students.insert {
                    it[name] = student.name
                    it[contact] = student.contact
                    it[licenseType] = student.licenseType
                    it[registrationDate] = student.registrationDate.toLocalDate()
                }
            }
            call.respond("Élève ajouté avec succès")
        }

        // Autres opérations : get par id, put, delete...
    }
}

fun rowToStudent(row: ResultRow): Student {
    return Student(
        id = row[Students.id],
        name = row[Students.name],
        contact = row[Students.contact],
        licenseType = row[Students.licenseType],
        registrationDate = row[Students.registrationDate].toString()
    )
}
fun Application.module(testing: Boolean = false) {
    DatabaseFactory.init()
    install(ContentNegotiation) {
        json()
    }
    routing {
        studentRoutes()
        // Ajoute d'autres routes...
    }
}
